pipeline {
    agent any

    environment {
        SONAR_TOKEN = credentials('sonarqube') // Remplacez par l'ID de vos credentials SonarQube dans Jenkins
    }

    stages {
        stage('Checkout Code') {
            steps {
                // Cloner le dépôt Git
                git url: 'https://github.com/khadythiara/ganeyi_frontend-dev.git', branch: 'main'
            }
        }
        
        stage('Install Dependencies') {
            steps {
                // Installer les dépendances du projet Angular
                sh 'npm install'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    withSonarQubeEnv('sonarqube') {  // Remplacez 'SonarQubeServer' par le nom de votre serveur SonarQube dans Jenkins
                        sh """
                            /opt/sonar-scanner/bin/sonar-scanner \
                            -Dsonar.projectKey=ganeyi_frontend-dev \
                            -Dsonar.sources=src \
                            -Dsonar.host.url=http://192.168.230.128:9000/ \
                            -Dsonar.login=${SONAR_TOKEN}
                        """
                    }
                }
            }
        }
        
        stage('Quality Gate Check') {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    script {
                        def qualityGate = waitForQualityGate()
                        if (qualityGate.status != 'OK') {
                            error "Quality Gate failed: ${qualityGate.status}"
                        }
                    }
                }
            }
        }

        stage('Build Angular Project') {
            steps {
                sh 'npm run build -- --configuration production'
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
